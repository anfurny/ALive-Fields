<?PHP 

require_once( "../models/ActionRecord.php");
require_once( "../includes/alex_functions.php"); 
require_once("../includes/dispatch_functions.php");
require_once("../../Classes/DispatchHistory.php");
 	validate_logged_in();
include "ajax_table.php";

function custom_error_handler($a,$b ="",$c ="",$d ="") { json_error($a . $b . $c . $d); return false;}

error_reporting(E_ERROR | E_PARSE | E_ALL);

$DEBUG = 0;
if (!$DEBUG)
	set_error_handler ("custom_error_handler", E_NOTICE);
else
{
	echo "DEBUG IS ON";
	$_GET['request'] = '{"DispatchID":54199,"SchedEnd":"14:00","Scheduled":"04/25/2011 12:00","TxtEnd":"16:00","TxtStart":"04/24/2011 13:00","chkLate":true}';
}	
set_time_limit(10);
$conn = database_connect(); 

$var = json_decode($_GET["request"], true);


//$InterpID = (int)$var["InterpID"];
$DispatchID = (int)$var["DispatchID"];
$TxtEnd = cleanFieldValue( $var["TxtEnd"], 0 );
$TxtStart = toSqlDate(  $var["TxtStart"], 0 ) ;

$SchedEnd = cleanFieldValue( $var["SchedEnd"],0);
$Scheduled = toSqlDate( $var["Scheduled"], 0 ) ;
$chklate = (int) $var["chkLate"];

$row = database_query("SELECT CustID, Dispatch.ClientID from Dispatch INNER JOIN Client on Dispatch.ClientID = Client.ClientID where DispatchID = $DispatchID");
$row = mssql_fetch_row($row);
$CustID =  $row[0];
$ClientID = $row[1];

$row = database_query("SELECT BillMulti from Customer where CustID = $CustID");
$row = mssql_fetch_row($row);
$BillMulti = $row[0];


if (database_fetch_field("SELECT InvHdrID FROM Invoice WHERE InvHdrID is NOT NULL AND DispatchID=" . $DispatchID))
	{
	$response["message"] = "It looks like this dispatch may already be completed?";
	die(json_encode($response));
	} 

//enforce Average being the default rating on all dispatches
database_query("UPDATE Dispatch SET Skill=3 WHERE DispatchID = $DispatchID AND Skill is Null ");
database_query("UPDATE Dispatch SET Reliability=3 WHERE DispatchID = $DispatchID AND Reliability is Null ");
database_query("UPDATE Dispatch SET Professionalism=3 WHERE DispatchID = $DispatchID AND Professionalism is Null ");
database_query("UPDATE Dispatch SET Communication=3 WHERE DispatchID = $DispatchID AND Communication is Null ");
database_query("UPDATE Dispatch SET Ethics=3 WHERE DispatchID = $DispatchID AND Ethics is Null ");
database_query("UPDATE Dispatch SET Safety=3 WHERE DispatchID = $DispatchID AND Safety is Null ");

   if ($chklate == true )
     database_query("UPDATE DISPATCH SET CancelReasonID=999 WHERE DispatchID=" . $DispatchID);

        if (1) //yes. 
			{  //Do we have any team items
            $InvRS = database_query("SELECT DISTINCT CustItems.Team FROM Invoice INNER JOIN CustItems ON Invoice.CustItemID = CustItems.CustItemID WHERE ((CustItems.Team= 1) AND (DispatchID=" . $DispatchID . "));");
			
			//Team is disabled for now... even if there are team custitems -Alex June 15 `12
            if ((! mssql_num_rows($InvRS)) or true) 
                $bolTeam = false;
			else 
				{
                $bolTeam = true;
            //Other dispatches for team that have a invoice header id
            //$InvRS.Close
               $InvRS = database_query("SELECT DISTINCT Invoice.InvHdrID FROM Dispatch INNER JOIN Invoice ON Dispatch.DispatchID = Invoice.DispatchID WHERE (((Invoice.InvHdrID)>0) and Dispatch.ClientID=" . $ClientID . " and Dispatch.scheduled='" . $Scheduled . "');"); 
				
                if (mssql_num_rows($InvRS)) 
					{
					// $InvRS = mssql_fetch_row($InvRS);
                     $lngInvID = $InvRS[0];			//better to just do this:
					 database_query("UPDATE Invoice SET InvHdrID=" . $lngInvID . " WHERE DispatchID=" . $DispatchID);
					 database_query("UPDATE Dispatch SET InvHdrLink=" . $lngInvID . " WHERE DispatchID=" . $DispatchID);
					 $response["response"] = "success";
					 echo json_encode($response);
					 record_completed($DispatchID);
					 die();                    //break 3; //GoTo FoundID //ugh a goto->_->_->_
                	}
           		}
            $InvRS = "";   //Lookup master dispatch ID to check for splits
            $SplitRS = database_query("SELECT * from DispatchSplits WHERE DispatchID = $DispatchID  OR  NewDispID = $DispatchID");
			 
            if (mssql_num_rows($SplitRS) ) 
				{
//				echo "Split";
            	//Master dispatch
                $lngMasterDispID = $SplitRS->_DispatchID;
            	//Look up any dispatch in split set that has a header id
                $InvRS = database_query("SELECT DISTINCT DispatchSplits.DispatchID, Invoice.InvHdrID, Invoice.DispatchID FROM DispatchSplits RIGHT JOIN Invoice ON DispatchSplits.NewDispID = Invoice.DispatchID WHERE (((DispatchSplits.DispatchID)=" . $lngMasterDispID . ") AND ((Invoice.InvHdrID)>0)) OR (((Invoice.InvHdrID)>0) AND ((Invoice.DispatchID)=" . $lngMasterDispID . "));");
 
                if (! mssql_num_rows($InvRS->numRows()))
				 { //Create or add to header for invoice
                    $InvRS = new ActionRecord("InvHdr", "SELECT", "InvHdrID");
					$InvRs.filter(array(array("CustID", "=", $CustID), array("Invoiced", "IS", "NULL"), array("Hold", "!=", "True")));
				
                    if ($BillMulti)
						 {
                        if (! $InvRS->numRows() ) 
							{                            
                            $InvRS->_Created = time();// rmg change to actual end date; if null, { scheduled end date

							if (strlen($TxtEnd ))
	                            $InvRS->_Invoiced = $SchedEnd;
							else
							    $InvRS->_Invoiced = $TxtEnd;

//                        $InvRS->_Invoiced = Date
                            $InvRS->_Hold = false;
                            $InvRS->_Printed = false;
                            $InvRS->_CustID = $CustID;
                            $InvRS->Insert();
                            //$InvRS.Close
                        	} 
						else //NOT InvRS->EOF
							{
                            $lngInvID = $InvRS->_InvHdrID;
                        	}
                    	  } 
					else //NOT BillMulti
						{                        
                        //$InvRS.AddNew
                        $InvRS->_Created = time();
// rmg change to actual end date; if null, { scheduled end date
//                    $InvRS->_Invoiced = Date
                        
						if (! strlen($TxtEnd) )
							$InvRS->_Invoiced = $SchedEnd;
						else
							$InvRS->_Invoiced = $TxtEnd;						
                        $InvRS->_Hold = false;
                        $InvRS->_Printed = false;
                        $InvRS->_CustID = $CustID;
                        $InvRS->insert(); 
						
                        $lngInvID =  $InvRS->getInsertedKey(); 
                    	}
                } 
				else 	//not InvRS EOF		
            //We have assigned a header id to one of the dispatches in a set of splits
                    {
					$row = mssql_fetch_assoc($InvRS);
					$lngInvID = $row['InvHdrID'];
					}           		     
           	 	} 
			else //not splitRs numrows
				{      //Create or add to header for invoice
//				echo "Testing multi";
                if ($BillMulti )
					{//156, 164, 169, 198, 203
					//echo "bill multi";
						// check for open InvHeader
                    $InvRS = database_query("SELECT InvHdrID, Hold, CustID, Created, Invoiced, Printed FROM InvHdr WHERE CustID=" . $CustID . " AND Posted is null AND Hold = 0 ORDER BY InvHdrID DESC" );
					
					$override_add = false;
					if (!database_fetch_field("SELECT Billable from Dispatch WHERE DispatchID = $DispatchID"))
						{ //due to bug in batching system, must give this its own closed ivoice
						$override_add = true;				
//						echo "override add";
						}
					
                    if ((! mssql_num_rows($InvRS)) || $override_add ) // NO open InvHeader
							{
							//echo "No open header";
							$InvRS = new ActionRecord("InvHdr", "INSERT", "InvHdrID");
							$InvRS->_Created = time();
// rmg change to actual end date; if null, then scheduled end date
//                    $InvRS->_Invoiced = Date
							if (strlen($TxtEnd))
								$InvRS->_Invoiced = $SchedEnd;
							else
								$InvRS->_Invoiced = $TxtEnd;
								
							$InvRS->_Hold = false;
							
							if ($override_add)
								{
								$InvRS->_Printed = true;									
								$InvRS->_Posted = false;
								$InvRS->_QBInvNo = "Not Billed";
								}
							else
								$InvRS->_Printed = false;
								
							$InvRS->_CustID = $CustID;
							$InvRS->update();
							
							$lngInvID = $InvRS->getInsertedKey();
							//IdentRS.Close
							} 
						else //else mssql_numrows InvRS
							{
							//echo "open header";
							$theRow = mssql_fetch_assoc($InvRS);
							//var_dump($theRow);
							$lngInvID = $theRow['InvHdrID'];
							}
						//echo "ID=" . $lngInvID;
                	} 
				else //not Bill Multi
				 	{
                    $InvRS = new ActionRecord("InvHdr", "INSERT", "InvHdrID");//("SELECT InvHdrID, Hold, CustID, Created, Invoiced, Printed FROM InvHdr");
//                    $InvRS.AddNew
                    $InvRS->_Created = time();

// rmg change to actual end date; if null, then scheduled end date
//  $InvRS->_Invoiced = time()
					if (strlen($TxtEnd))
						{
						//	echo "sched end = $SchedEnd";
							$InvRS->_Invoiced =  $TxtEnd;; 
						}
					else
						{
							$InvRS->_Invoiced = $SchedEnd;
						}
						//echo "$TxtEnd";
					//echo "trying to turn " . $InvRS->_Invoiced . " into... :" . toSqlDate($InvRS->_Invoiced) ;
                    $InvRS->_Hold = false;
                    $InvRS->_Printed = false;
                    $InvRS->_CustID = $CustID;
                    $InvRS->update(); //same as insert
					
                     $lngInvID = $InvRS->getInsertedKey();
               		}
          	    }
//FoundID:
            database_query("UPDATE Invoice SET InvHdrID=" . (int)$lngInvID . " WHERE DispatchID=" . $DispatchID);
			// Update the dispatch record
			// DoEvents
			database_query("UPDATE Dispatch set InvHdrLink = " . (int)$lngInvID . " WHERE DispatchID = " . $DispatchID);
			database_query("UPDATE Dispatch SET Started = '" . toSqlDate($TxtStart) . "' , Ended = '" . toSqlDate($TxtEnd) .  "' WHERE DispatchID = $DispatchID");
        }

// else 
	//{ //supposedly this form supports another function
        ////Process Update
$response = array();
$response["response"] = "success";
record_completed($DispatchID);
echo json_encode($response);

function record_completed($DispatchID)
	{
			$hist = new DispatchHistory();
			$details = array();
			$details['DispatchID'] = $DispatchID ;
			$details['ActionID'] = DISPATCH_COMPLETED; 
			$details['HistNotes'] = "Web Dispatch Completed" ;
			$details['StaffID'] = $_SESSION['login']['loginID'];
			$hist->create($details);    	
	}
?>