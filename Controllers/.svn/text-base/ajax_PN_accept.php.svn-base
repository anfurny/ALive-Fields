<?PHP

require_once( "../models/ActionRecord.php");
require_once( "../includes/alex_functions.php"); 
require_once("../includes/dispatch_functions.php");
 	validate_logged_in();

function custom_error_handler($a,$b ="",$c ="",$d ="") { json_error($a . $b . $c . $d); return false;}

error_reporting(E_ERROR | E_PARSE | E_ALL);

$DEBUG = false;
if ( ! $DEBUG)
	{
	 set_error_handler ("custom_error_handler", E_NOTICE);
	}
 else 
	{
 	echo "DEBUG IS ON";
	}	 
	
 set_time_limit(10);
$conn = database_connect();;

$var = json_decode($_GET["request"], true);


$lngInterpID  = (int)$var["InterpID"];
$lngDispID  = (int)$var["DispatchID"];

    //Validate accepted starting and ending within appointment time;
//    $datSched = Format(Me.txtScheduled, "Medium Time");
 //   $datSchedEnd = Me.txtSchedEnd;
//    $datAcceptEnd = Me.txtAcceptEnd;

    if (database_fetch_field("SELECT InterpID FROM Dispatch WHERE DispatchID =" . $lngDispID)) 
		{
		$response['criticalError'] = "There's aleady an interpreter assigned to this dispatch.  Please un-assign the current interpreter before continuing.";
		die(json_encode($response));
		}

//DO splits exist anymore? What are they? 
// Firstly, they will not be utilized in this incarnation.
//Splits  ARE  the ability to take a very long appointment (e.g 10 hours) and then
// book different interpreters to PIECES of it (e.g. 2 - 4)

/*
    if ( DateDif (f("n", $datSched, Me.txtAccepted) <> 0) Or DateDif (f("n", $datSchedEnd, $datAcceptEnd) <> 0 ) 
		{
        strMsg = "Accept Split Assignment for Dispach ID " . $lngDispID;
        if ( MsgBox(strMsg, vbOKCancel + vbQuestion, "Confirm Assignment Split") = vbOK )
			 {
            //Record contact;
            database_query( "UPDATE InterpContact   Contacted=getDate() WHERE DispatchID= " . $lngDispID . " AND InterpID=" . $lngInterpID);
            //Copy splitable records;
              $SplitRS = database_fetch_first ("SELECT NewDispID, DispatchID FROM DispatchSplits");
            //Remaning time;
            if ( $datSched = Me.txtAccepted ) 
				{
                //Make one new dispatch;
                $SplitRS.AddNew;
                $SplitRS->_DispatchID = $lngDispID;
                  $DispRS = database_fetch_first ("SELECT Dispatch.ClientID, Dispatch.Scheduled, Dispatch.SchedEnd, Dispatch.CustConfirmed, Dispatch.AuthorizationNo, Dispatch.RecievedBy, Dispatch.Recieved, Dispatch.Caller, Dispatch.CallerPhone, Dispatch.Comments, Dispatch.SituID, Dispatch.FacilityID, Dispatch.Latitude, Dispatch.Longitude, Dispatch.Billable, Dispatch.Payable FROM Dispatch WHERE DispatchID= " . $lngDispID);
                //New starting/ending time;
                $datTime1 = Format($DispRS->_Scheduled, "Short Date") . " " . Me.txtAcceptEnd;
                  $NewDispRS = database_fetch_first ("SELECT Dispatch.DispatchID, Dispatch.ClientID, Dispatch.Scheduled, Dispatch.SchedEnd, Dispatch.CustConfirmed, Dispatch.AuthorizationNo, Dispatch.RecievedBy, Dispatch.Recieved, Dispatch.Caller, Dispatch.CallerPhone, Dispatch.Comments, Dispatch.SituID, Dispatch.InterpID, Dispatch.FacilityID, Dispatch.Latitude, Dispatch.Longitude, Dispatch.Billable, Dispatch.Payable FROM Dispatch");
                With $NewDispRS;
                //New dispatch has accepted portion;
                    .AddNew;
                   $NewDispRS_ClientID = $DispRS->_ClientID;
                   $NewDispRS_Scheduled = $DispRS->_Scheduled;
                   $NewDispRS_SchedEnd = Me.txtAcceptEnd;
                   $NewDispRS_CustConfirmed = $DispRS->_CustConfirmed;
                   $NewDispRS_AuthorizationNo = $DispRS->_AuthorizationNo;
                   $NewDispRS_RecievedBy = $DispRS->_RecievedBy;
                   $NewDispRS_Recieved = $DispRS->_Recieved;
                   $NewDispRS_Caller = $DispRS->_Caller;
                   $NewDispRS_CallerPhone = $DispRS->_CallerPhone;
                   $NewDispRS_Comments = $DispRS->_Comments;
                   $NewDispRS_SituID = $DispRS->_SituID;
                   $NewDispRS_InterpID = $lngInterpID;
                   $NewDispRS_FacilityID = $DispRS->_FacilityID;
                   $NewDispRS_Longitude = $DispRS->_Longitude;
                   $NewDispRS_Latitude = $DispRS->_Latitude;
                   $NewDispRS_Billable = $DispRS->_Billable;
                   $NewDispRS_Payable = $DispRS->_Payable;
                    $SplitRS->_NewDispID =$NewDispRS_DispatchID;
                //Build new invoice items w/adjusted qty;
                    database_query( "INSERT INTO Invoice ( DispatchID, CustItemID, Cost, Unit, [Min], Quantity, Invoiced, InterpRate, PayQty, PayUnit, PayMin ) SELECT " .$NewDispRS_DispatchID . " as x , Invoice.CustItemID, Invoice.Cost, Invoice.Unit, Invoice.Min, Invoice.Quantity*" . PctTime() . " as y, Invoice.Invoiced, Invoice.InterpRate, Invoice.PayQty, Invoice.PayUnit, Invoice.PayMin FROM Invoice INNER JOIN CustItems ON Invoice.CustItemID = CustItems.CustItemID WHERE (((CustItems.Splitable)=true) and Invoice.DispatchID=" . $lngDispID . ");";
                    database_query( "UPDATE Invoice INNER JOIN CustItems ON Invoice.CustItemID = CustItems.CustItemID   Quantity=Quantity*(1-" . PctTime() . ") WHERE (((CustItems.Splitable)=true) and Invoice.DispatchID=" . $lngDispID . ");");
                //Record contact;
                    database_query( "Insert into InterpContact (Contacted, DispatchID, InterpID) VALUES (getDate()," .$NewDispRS_DispatchID . "," . $lngInterpID . ")";
                    .Update;
                End With;
                //  new start time for existing dispatch which contains remainder of assignment;
                $DispRS.Edit;
                $DispRS->_Scheduled = $datTime1;
                $DispRS.Update;
                $SplitRS.Update;
            	} 
			else 
				{
                if ( DateDif (f("n", $datAcceptEnd, $datSchedEnd) = 0 ) 
					{						
                    //Make one new dispatch;
                    $SplitRS.AddNew;
                    $SplitRS->_DispatchID = $lngDispID;
                      $DispRS = database_fetch_first ("SELECT Dispatch.ClientID, Dispatch.Scheduled, Dispatch.SchedEnd, Dispatch.CustConfirmed, Dispatch.AuthorizationNo, Dispatch.RecievedBy, Dispatch.Recieved, Dispatch.Caller, Dispatch.CallerPhone, Dispatch.Comments, Dispatch.SituID, Dispatch.FacilityID, Dispatch.Latitude, Dispatch.Longitude, Dispatch.Billable, Dispatch.Payable FROM Dispatch WHERE DispatchID= " . $lngDispID);
                    //New starting/ending time;
                    $datTime1 = Format($DispRS->_Scheduled, "Short Date") . " " . Me.txtAccepted;
                      $NewDispRS = database_fetch_first ("SELECT Dispatch.DispatchID, Dispatch.ClientID, Dispatch.Scheduled, Dispatch.SchedEnd, Dispatch.CustConfirmed, Dispatch.AuthorizationNo, Dispatch.RecievedBy, Dispatch.Recieved, Dispatch.Caller, Dispatch.CallerPhone, Dispatch.Comments, Dispatch.SituID, Dispatch.InterpID, Dispatch.FacilityID, Dispatch.Latitude, Dispatch.Longitude, DIspatch.Billable, Dispatch.Payable FROM Dispatch");
                    With $NewDispRS;
                    //New dispatch has accepted portion;
                        .AddNew;
                       $NewDispRS->_ClientID = $DispRS->_ClientID;
                       $NewDispRS->_Scheduled = $datTime1;
                       $NewDispRS->_SchedEnd = Me.txtSchedEnd;
                       $NewDispRS->_CustConfirmed = $DispRS->_CustConfirmed;
                       $NewDispRS->_AuthorizationNo = $DispRS->_AuthorizationNo;
                       $NewDispRS->_RecievedBy = $DispRS->_RecievedBy;
                       $NewDispRS->_Recieved = $DispRS->_Recieved;
                       $NewDispRS->_Caller = $DispRS->_Caller;
                       $NewDispRS->_CallerPhone = $DispRS->_CallerPhone;
                       $NewDispRS->_Comments = $DispRS->_Comments;
                       $NewDispRS->_SituID = $DispRS->_SituID;
                       $NewDispRS->_InterpID = $lngInterpID;
                       $NewDispRS->_FacilityID = $DispRS->_FacilityID;
                       $NewDispRS->_Longitude = $DispRS->_Longitude;
                       $NewDispRS->_Latitude = $DispRS->_Latitude;
                       $NewDispRS->_Billable = $DispRS->_Billable;
                       $NewDispRS->_Payable = $DispRS->_Payable;
                        $SplitRS->_NewDispID = $NewDispRS->DispatchID;
                    //Build new invoice items w/adjusted qty;
                        database_query( "INSERT INTO Invoice ( DispatchID, CustItemID, Cost, Unit, [Min], Quantity, Invoiced, InterpRate, PayQty, PayUnit, PayMin ) SELECT " .$NewDispRS_DispatchID . " as x , Invoice.CustItemID, Invoice.Cost, Invoice.Unit, Invoice.Min, Invoice.Quantity*" . PctTime() . " as y, Invoice.Invoiced, Invoice.InterpRate, Invoice.PayQty, Invoice.PayUnit, Invoice.PayMin FROM Invoice INNER JOIN CustItems ON Invoice.CustItemID = CustItems.CustItemID WHERE (((CustItems.Splitable)=true) and Invoice.DispatchID=" . $lngDispID . ");";
                        database_query( "UPDATE Invoice INNER JOIN CustItems ON Invoice.CustItemID = CustItems.CustItemID   Quantity=Quantity*(1-" . PctTime() . ") WHERE (((CustItems.Splitable)=true) and Invoice.DispatchID=" . $lngDispID . ");");
                    //Record contact;
                        database_query( "Insert into InterpContact (Contacted, DispatchID, InterpID) VALUES (getDate()," .$NewDispRS_DispatchID . "," . $lngInterpID . ")";
                        .Update;
                    End With;
                    //  new start time for existing dispatch which contains remainder of assignment;
                    $DispRS.Edit;
                    $DispRS->_SchedEnd = $datTime1;
                    $DispRS.Update;
                    $SplitRS.Update;
                	} 
				else 
					{
                    //Make 2 new dispatches;
                    //Beginning to accepted;
                      $DispRS = database_fetch_first ("SELECT Dispatch.ClientID, Dispatch.Scheduled, Dispatch.SchedEnd, Dispatch.CustConfirmed, Dispatch.AuthorizationNo, Dispatch.RecievedBy, Dispatch.Recieved, Dispatch.Caller, Dispatch.CallerPhone, Dispatch.Comments, Dispatch.SituID, Dispatch.FacilityID, Dispatch.Latitude, Dispatch.Longitude, Dispatch.Billable, Dispatch.Payable FROM Dispatch WHERE DispatchID= " . $lngDispID);
                    //New starting/ending time;
                    $datTime1 = Format($DispRS->_Scheduled, "Short Date") . " " . Me.txtAccepted;
                    $datTime2 = Format($DispRS->_Scheduled, "Short Date") . " " . Me.txtSchedEnd;
                      $NewDispRS = database_fetch_first ("SELECT Dispatch.DispatchID, Dispatch.ClientID, Dispatch.Scheduled, Dispatch.SchedEnd, Dispatch.CustConfirmed, Dispatch.AuthorizationNo, Dispatch.RecievedBy, Dispatch.Recieved, Dispatch.Caller, Dispatch.CallerPhone, Dispatch.Comments, Dispatch.SituID, Dispatch.InterpID, Dispatch.FacilityID, Dispatch.Latitude, Dispatch.Longitude, Dispatch.Billable, Dispatch.Payable FROM Dispatch");
                    With $NewDispRS;
                    //New dispatch for accepted portion;
                        .AddNew;
                       $NewDispRS_ClientID = $DispRS->_ClientID;
                       $NewDispRS_Scheduled = $datTime1;
                       $NewDispRS_SchedEnd = Format(Me.txtAcceptEnd, "Medium Time");
                       $NewDispRS_CustConfirmed = $DispRS->_CustConfirmed;
                       $NewDispRS_AuthorizationNo = $DispRS->_AuthorizationNo;
                       $NewDispRS_RecievedBy = $DispRS->_RecievedBy;
                       $NewDispRS_Recieved = $DispRS->_Recieved;
                       $NewDispRS_Caller = $DispRS->_Caller;
                       $NewDispRS_CallerPhone = $DispRS->_CallerPhone;
                       $NewDispRS_Comments = $DispRS->_Comments;
                       $NewDispRS_SituID = $DispRS->_SituID;
                       $NewDispRS_FacilityID = $DispRS->_FacilityID;
                       $NewDispRS_Longitude = $DispRS->_Longitude;
                       $NewDispRS_Latitude = $DispRS->_Latitude;
                       $NewDispRS_InterpID = $lngInterpID;
                       $NewDispRS_Billable = $DispRS->_Billable;
                       $NewDispRS_Payable = $DispRS->_Payable;
                        $SplitRS.AddNew;
                        $SplitRS->_DispatchID = $lngDispID;
                        $SplitRS->_NewDispID =$NewDispRS_DispatchID;
                        $SplitRS.Update;
                    //Build new invoice items w/adjusted qty;
                        database_query( "INSERT INTO Invoice ( DispatchID, CustItemID, Cost, Unit, [Min], Quantity, Invoiced, InterpRate, PayQty, PayUnit, PayMin ) SELECT " .$NewDispRS_DispatchID . " as x , Invoice.CustItemID, Invoice.Cost, Invoice.Unit, Invoice.Min, Invoice.Quantity*" . PctTime() . " as y, Invoice.Invoiced, Invoice.InterpRate, Invoice.PayQty, Invoice.PayUnit, Invoice.PayMin FROM Invoice INNER JOIN CustItems ON Invoice.CustItemID = CustItems.CustItemID WHERE (((CustItems.Splitable)=true) and Invoice.DispatchID=" . $lngDispID . ");";
                    //Record contact;
                        database_query( "Insert into InterpContact (Contacted, DispatchID, InterpID) VALUES (getDate()," .$NewDispRS_DispatchID . "," . $lngInterpID . ")";
                        .Update;
                    //Create Ending Remainder;
                        .AddNew;
                       $NewDispRS_ClientID = $DispRS->_ClientID;
                       $NewDispRS_Scheduled = Format(Me.txtScheduled, "Short Date") . " " . Me.txtAcceptEnd;
                       $NewDispRS_SchedEnd = Me.txtSchedEnd;
                       $NewDispRS_CustConfirmed = $DispRS->_CustConfirmed;
                       $NewDispRS_AuthorizationNo = $DispRS->_AuthorizationNo;
                       $NewDispRS_RecievedBy = $DispRS->_RecievedBy;
                       $NewDispRS_Recieved = $DispRS->_Recieved;
                       $NewDispRS_Caller = $DispRS->_Caller;
                       $NewDispRS_CallerPhone = $DispRS->_CallerPhone;
                       $NewDispRS_Comments = $DispRS->_Comments;
                       $NewDispRS_SituID = $DispRS->_SituID;
                       $NewDispRS_FacilityID = $DispRS->_FacilityID;
                       $NewDispRS_Longitude = $DispRS->_Longitude;
                       $NewDispRS_Latitude = $DispRS->_Latitude;
                       $NewDispRS_Billable = $DispRS->_Billable;
                       $NewDispRS_Payable = $DispRS->_Payable;
                        $SplitRS.AddNew;
                        $SplitRS->_DispatchID = $lngDispID;
                        $SplitRS->_NewDispID =$NewDispRS_DispatchID;
                        $SplitRS.Update;
                    //Calc % of remaining time items;
                        $curTotMin = DateDif (f("n", Format(Me.txtScheduled, "Medium Time"), Me.txtSchedEnd);
                        $dblPctRemain = (DateDif (f("n", $datAcceptEnd, $datSchedEnd)) / curTotMin;
                        $database_query( "INSERT INTO Invoice ( DispatchID, CustItemID, Cost, Unit, [Min], Quantity, Invoiced, InterpRate, PayQty, PayUnit, PayMin ) SELECT " .$NewDispRS_DispatchID . " as x , Invoice.CustItemID, Invoice.Cost, Invoice.Unit, Invoice.Min, Invoice.Quantity*" . dblPctRemain . " as Y, Invoice.Invoiced, Invoice.InterpRate, Invoice.PayQty, Invoice.PayUnit, Invoice.PayMin FROM Invoice INNER JOIN CustItems ON Invoice.CustItemID = CustItems.CustItemID WHERE (((CustItems.Splitable)=true) and Invoice.DispatchID=" . $lngDispID . ");";
                        .Update;
                    End With;
                    //  new end time for first portion of existing dispatch which contains remainder of assignment;
                    $DispRS.Edit;
                    $DispRS->_SchedEnd = Me.txtAccepted;
                    $DispRS.Update;
                    //Adjust remaining items;
                    $dblPctRemain = (DateDif (f("n", Format(Me.txtScheduled, "Medium Time"), Me.txtAccepted)) / curTotMin;
                    database_query( "UPDATE Invoice INNER JOIN CustItems ON Invoice.CustItemID = CustItems.CustItemID   Quantity=Quantity*" . dblPctRemain . " WHERE (((CustItems.Splitable)=true) and Invoice.DispatchID=" . $lngDispID . ");");
               	 }
             } //endif confirm split
			 
            $SplitRS.Close;
            if ( IsLoaded("Assignments") ) 
				{
                Forms.Assignments.AssignClientSub.Form.Requery;
                Forms.Assignments.AssignInterpSub.Form.Requery;
	            }
            if ( IsLoaded("AssignByInterp") ) 
				{
                Forms.AssignByInterp.AssignBySub.Form.Requery;
	            }
            //DoCmd.Close acForm, "AcceptNego";
            //Opportuinity to send email;
            varEmail = DLookup("EMail", "Interpreter", "InterpID=" . $lngInterpID);
            if ( Not is_null(varEmail) )  
                Me.cmdEmail.Enabled = true;
             
        }
	 else //no split */
		{       
        if ( 1 ) //confirmed client side 
			 {
            //Record contact;
            database_query( "UPDATE InterpContact  SET  Contacted=getDate() WHERE DispatchID= " . $lngDispID . " AND InterpID=" . $lngInterpID);
            //Accept;
            database_query( "UPDATE Dispatch  SET InterpId=" . $lngInterpID . ", AssignedBy = '" . CurrentUser() . "', Assigned=getDate() WHERE DispatchID=" . $lngDispID);
			 
            //DoCmd.Close acForm, "AcceptNego";
            $varEmail = database_fetch_field("SELECT EMail from Interpreter WHERE InterpID=" . $lngInterpID);
			$response["email"] = $varEmail;
			
			require_once("../../Classes/DispatchHistory.php");
	
			$hist = new DispatchHistory();
			$details = array();
			$details['DispatchID'] = $lngDispID ;
			$details['ActionID'] = INTERPRETER_ASSIGNED; //made up an ID for New Dispatch
			$details['HistNotes'] = "Web Dispatch Assigned interp #" . $lngInterpID ;
			$details['StaffID'] = $_SESSION['login']['loginID'];
			$hist->create($details);
            }          
	    }
 
$response = array();
$response["response"] = "success";
echo json_encode($response);
?>